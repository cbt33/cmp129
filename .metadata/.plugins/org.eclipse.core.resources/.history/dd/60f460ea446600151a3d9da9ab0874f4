package examples.exceptions;

public class Rocket {
	
	private int thrust;
	private double size;
	private static int minThrust = 6000;
	private static double minSize = 5000;
	
	public Rocket() throws ThrustException, SizeException {
		this.setThrust(minThrust);
		this.setSize(minSize);
	}
	
	public Rocket(int thrust, double size) throws ThrustException, SizeException {
		this.setThrust(thrust);
		this.setSize(size);
	}
	
	@Override
	public String toString() {
		return "A rocket with thrust " + thrust 
				+ " and a size " + size + ".";
	}
	
	protected void finalize() {
		System.out.println("Finalize Called");
	}

	public int getThrust() {
		return thrust;
	}

	public void setThrust(int thrust) throws ThrustException {
		if (thrust < minThrust)
			throw new ThrustException();
		else
			this.thrust = thrust;
	}

	public double getSize() {
		return size;
	}

	public void setSize(double size) throws SizeException {
		if (thrust < minSize)
			throw new SizeException();
		else
			this.size = size;
	}
}
